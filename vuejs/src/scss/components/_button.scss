@import "../settings/variables";
@import "../utils/functions";

$button-border-radius: 5px !default;
$button-palette: $palette !default;
$button-sizes: (
  initial: 0.9rem,
  small: 0.75rem,
  large: 1.25rem,
) !default;
$button-variants: solid, hollow, clear;

$button-variant: nth($button-variants, 1) !default;
$button-bg-color: map-get($button-palette, initial) !default;
$button-disabled-opacity: 0.3 !default;

@mixin button-base() {
  cursor: pointer;
  text-transform: uppercase;
  border-width: 1px;
  border-style: solid;
  border-radius: 5px;
  padding: 0.8em 1.2em;
  font-size: map-get($button-sizes, initial);
  margin: 0.2rem;
}

@mixin button-disabled($opacity: $button-disabled-opacity) {
  &[disabled],
  *.disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }
}

@mixin button-sizes($sizes: $button-sizes) {
  @each $size, $value in map-remove($sizes, initial) {
    &.#{$size} {
      font-size: $value;
    }
  }
}

@mixin button-style($bg-color: $button-bg-color, $color: auto) {
  background-color: $bg-color;
  border-color: darken($bg-color, 5);

  @if ($color == auto) {
    $color: choose-contrast-color($bg-color);
  }

  color: $color;

  &:hover {
    background-color: darken($bg-color, 5);
  }
}

@mixin button-hollow-style($color: $button-bg-color) {
  border-color: $color;
  background-color: transparent;
  color: $color;
  &:hover {
    background-color: lighten($color, 70);
  }
}

@mixin button-variant($variant: $button-variant, $color: $button-bg-color) {
  @if ($variant == solid) {
    @include button-style($bg-color: $color);
  } @else if($variant == hollow) {
    @include button-hollow-style($color);
  }
}

@mixin button {
  .button {
    @include button-base;
    @include button-sizes;
    @include button-disabled;
    @include button-style;
    @each $variant in $button-variants {
      $selector: if($button-variant == $variant, null, ".#{$variant}");
      &#{$selector} {
        @each $key, $value in $button-palette {
          &.#{$key} {
            @include button-variant($variant, $color: $value);
          }
        }
      }
    }
  }
}
